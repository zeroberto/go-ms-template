package usecase

import (
	"fmt"
	"time"

	"github.com/zeroberto/go-ms-template/model"
)

// ExampleCreationUseCase is responsible for providing the business methods for
// creating the Example model
type ExampleCreationUseCase interface {
	// CreateExample is responsible for creating a new Example
	CreateExample(example *model.Example) (*model.Example, error)
	// UpdateExample is responsible for updating the complete Example model
	UpdateExample(example *model.Example) (*model.Example, error)
	// UpdateExampleProperties is responsible for updating partial properties of the Example model
	UpdateExampleProperties(ID int64, properties map[string]interface{}) (*model.Example, error)
}

// ExampleReadUseCase is responsible for providing the business methods for
// reading the Example model
type ExampleReadUseCase interface {
	// ListExamples is responsible for obtaining all registered Examples
	ListExamples() ([]model.Example, error)
	// ListActiveExamples is responsible for obtaining all active Examples
	ListActiveExamples() ([]model.Example, error)
	// GetExample is responsible for obtaining an Example according to the given identifier
	GetExample(ID int64) (*model.Example, error)
	// GetExampleByName is responsible for obtaining an Example according to the given name
	GetExampleByName(name string) (*model.Example, error)
}

// ExampleRemovalUseCase is responsible for providing the business methods for
// removing the Example model
type ExampleRemovalUseCase interface {
	// DeleteExample is responsible for permanently removing an Example model
	DeleteExample(ID int64) error
	// DeleteExampleLogically is responsible for removing the Example model logically (deactivation)
	DeleteExampleLogically(ID int64, deactivationDatetime time.Time) error
}

// Error is responsible for encapsulating errors generated by business methods
type Error struct {
	Cause error
}

// NotExistsError must be reported when the ID is not registered
type NotExistsError struct {
	ID int64
}

func (err *Error) Error() string {
	return err.Cause.Error()
}

func (err *NotExistsError) Error() string {
	return fmt.Sprintf("No examples found for ID %d", err.ID)
}
